/* Описание некоторых особенностей кода
 *
 * Ноги:
 * PA3 - Вход для аналоговой или цифровой клавиатуры.
 * PA0 - Вход датчика оборота колеса
 * 
 * TIM1 Формирует задержки для u8g
 * TIM2 Для шим выходов
 * TIM3 Используется для бипера
 * TIM4 Таймер для рассчета скорости
 *
 *
  * * * * * * * * * * * * * * * Временно * * * * * * * * * * * * * * * * * *
 * Выводы из корпуса.
 * 1 + BAT
 * 2->9 Датчик колеса.
 * 3->9 Резистивная клавиатура
 * 4 +3V3 OUT
 * 5->9 RESET
 * 6->9 PWM
 * 7->9 SWDCLK (Для прошивки и отладки)
 * 8->9 SWDIO (Для прошивки и отладки)
 * 9 GND
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Выводы из корпуса.
 * 1 +5V Вход
 * 2->9 Датчик колеса.
 * 3->9 Резистивная клавиатура
 * 4->9 PWM Свет фары
 * 5 CANL
 * 6 CANH
 * 7->9 SWDCLK (Для прошивки и отладки)
 * 8->9 SWDIO (Для прошивки и отладки)
 * 9 GND
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Приоритеты прерываний.
 * 4 групп X 4 приоритетов
 *
 * Группа 0 :
 *
 * Группа 1 :
 * - 2 Вход датчика оборотов колеса
 * - 2 Таймер оборота колеса
 * - 2 Внешнее прерывание клавиатуры для пробуждения
 * - 2 Внешнее прерывание на UART1_RX для пробуждения
 *
 * Группа 2 :
 * - 1 UART1 по передаче байта
 * - 2 CAN1_RX0
 * - 2 CAN1_TX
 *
 * Группа 3 :
 * - 3 Systick
 * - 3 Прерывание секунды
 * - 3 Внешнее прерывание будильника
 * - 3 Завершено измерение напряжения батареи
 *
 * 1. От датчика оборота колеса. Быстро сохраняем значение, рассчет и вывод на дисплей откладываем на основной цикл выставлением флага.
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Система управления питанием и сном:

 * Обслуживание флагов выполняемых задач
TASK_DRIVE		//Велосипед в движении
TASK_REDRAW		//Запрос на срочную перерисовку экрана
TASK_LIM_REDRAW //Запрос на отрисовку с ограничением FPS
TASK_UPDATETIME //Обновить системное время из счетчика
TASK_TIMESETUP	//Вызвать диалог установки времени
TASK_SAVEPARAMS //Сохранить настройки в память
TASK_TIMER		//Работает утилита таймер
TASK_STOPWATCH	//Работает утилита секундомер
TASK_CLOCK_MAX	//Максимальная частота процессора на 2 секунды
TASK_BMS_CON	//Блок управления батареей подключен

Задачи требующие активного ядра (Полный запрет одыха):
//TASK_REDRAW
TASK_UPDATETIME
//TASK_SAVEPARAMS

Задачи требующие активной перефирии
TASK_LIM_REDRAW
TASK_TIMER
TASK_STOPWATCH
TASK_DRIVE
TASK_TIMESETUP
TASK_CLOCK_MAX

Флаг разрешающий выключение вместо сна
TASK_POWEROFF

Флаги требующие уровня тактовой частоты

[72Мгц] - производительный уровень
TASK_CLOCK_MAX

[24Мгц] - нормальный уровень
TASK_CLOCK_MID
TASK_BMS_CON
TASK_DRIVE

[8Мгц] - Нижний уровень

 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 Основные режимы:
 1 Полностью выключен.(Возможно только включение)
 2 Режим ожидания. Показывает часы или ничего. (Ожидает события для возобновления работы)

Включение прибора - вращением колеса.
Пробуждение из спячки - вращение колеса(если не тихий режим счетчика), нажатие кнопки...

Статистика заезда сохраняется перед выключением и
 по истечении заданного интервала без движения.

Тестирование скорости работы дисплея на 8мгц(CPU) 4Мгц(SPI) стартовый экран
 * Драйвер | Время процессора | Время передачи
 * DISPLAY_ST7586S_20X_SPI | 244.9 | 130.2
 * DISPLAY_ST75256_20X_SPI | 149 | 31,37
 * DISPLAY_ST75256_20X_SPI_DMA | 97.23 | 10.88

Подключение перефирии.
Дисплей:
 * PA4 = A0 (RS)
 * PA5 = SCK
 * PA6 = MISO use as CS
 * PA7 = MOSI (SDA)

EEPROM:
 * PB10 = SCL
 * PB11 = SDA
 
USART1 (Для дебага):
 * PA9 = TX
 * PA10 = RX
 
BEEPER:
 * PB0
 * GND
 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Потребление.
 * Дисплей ST7586:
 *	- Актив ~ 1300мка
 *	- Сон 11мка
 *
 * Дисплей ST75256:
 * 	- Актив ~ 1200мка
 * 	- Сон 3мка
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TODO:
 1. Перенести обработку флагов state.taskList в низкоприоритетное прерывание SVCALL из основного цикла.
*/
